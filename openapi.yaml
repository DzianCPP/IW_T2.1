openapi: 3.0.0
info:
  title: 'gorest API'
  description: 'Free REST API service'
  version: '2.0'
paths:
  '/public/v2/users/{id}':
    get:
      summary: 'get list of users'
      operationId: getListOfUsers
      parameters:
        -
          name: id
          in: path
          required: false
      responses:
        '200':
          description: OK
        '400':
          description: 'Bad request'
        '404':
          description: 'Requested resource not found'
        '405':
          description: 'Method not allowed'
        '429':
          description: 'Too many requests'
        '500':
          description: 'Internal server error'
      security:
        -
          securityScheme: bearerAuth
          type: oauth2
          scheme: bearer
    delete:
      summary: 'delete user'
      operationId: deleteUser
      parameters:
        -
          name: id
          in: path
          required: true
      responses:
        '200':
          description: OK
        '204':
          description: 'No content'
        '400':
          description: 'Bad request'
        '401':
          description: 'Authentication failed'
        '404':
          description: 'Requested resource not found'
        '405':
          description: 'Method not allowed'
        '422':
          description: 'Data validation failed'
        '429':
          description: 'Too many requests'
        '500':
          description: 'Internal server error'
      security:
        -
          securityScheme: bearerAuth
          type: oauth2
          scheme: bearer
    patch:
      summary: 'delete user'
      operationId: patchUser
      parameters:
        -
          name: id
          in: path
          required: true
      requestBody:
        $ref: '#components/requestBodies/patchUser'
      responses:
        '200':
          description: OK
        '201':
          description: 'A resource was successfully created'
        '400':
          description: 'Bad request'
        '401':
          description: 'Authentication failed'
        '404':
          description: 'Requested resource not found'
        '405':
          description: 'Method not allowed'
        '422':
          description: 'Data validation failed'
        '429':
          description: 'Too many requests'
        '500':
          description: 'Internal server error'
      security:
        -
          securityScheme: bearerAuth
          type: oauth2
          scheme: bearer
  /public/v2/users:
    post:
      summary: 'create new user'
      operationId: createUser
      requestBody:
        $ref: '#components/requestBodies/postUser'
      responses:
        '200':
          description: OK
        '201':
          description: 'A resource was successfully created'
        '400':
          description: 'Bad request'
        '401':
          description: 'Authentication failed'
        '404':
          description: 'Requested resource not found'
        '405':
          description: 'Method not allowed'
        '422':
          description: 'Data validation failed'
        '429':
          description: 'Too many requests'
        '500':
          description: 'Internal server error'
      security:
        -
          securityScheme: bearerAuth
          type: oauth2
          scheme: bearer
components:
  requestBodies:
    postUser:
      description: 'body to create a new user'
      required: true
      content:
        application/json:
          schema:
            properties:
              email:
                description: 'Email of the user'
                type: string
              name:
                description: 'Full name of the user'
                type: string
              gender:
                description: 'Gender of the user'
                required:
                  - male
                  - female
                type: string
              status:
                description: 'Status of the user'
                required:
                  - active
                  - inactive
                type: string
            type: string
    patchUser:
      description: 'body to patch a user'
      required: true
      content:
        application/json:
          schema:
            properties:
              email:
                description: 'Email of the user'
                type: string
              name:
                description: 'Full name of the user'
                type: string
              gender:
                description: 'Gender of the user'
                required:
                  - male
                  - female
                type: string
              status:
                description: 'Status of the user'
                required:
                  - active
                  - inactive
                type: string
            type: string
